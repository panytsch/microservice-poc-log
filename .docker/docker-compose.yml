version: '3.7'

services:
  rabbitmq:
    container_name: ${CONTAINER_NAME_RABBITMQ}
    image: rabbitmq:3-management
    hostname: ${RABBITMQ_DOCKER_HOSTNAME}
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PWD: ${RABBITMQ_PWD}
      RABBITMQ_USR: ${RABBITMQ_USR}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - default
      - backend
      - testelk

  logstash:
    container_name: ${CONTAINER_NAME_LOGSTASH}
    image: docker.elastic.co/logstash/logstash:7.6.2
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ELASTIC_HOST: ${ELASTIC_HOST}
      RABBITMQ_HOST: ${RABBITMQ_LOGSTASH_HOST}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
      RABBITMQ_PWD: ${RABBITMQ_PWD}
      RABBITMQ_USR: ${RABBITMQ_USR}
    ports:
      - 5046:5046
    volumes:
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/config/pipelines:/usr/share/logstash/config/pipelines:ro
    depends_on:
      - elasticsearch
      - rabbitmq
      - kibana
    networks:
      - testelk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    hostname: ${ELASTIC_HOST}
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - testelk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.2
    ports:
      - "5601:5601"
    networks:
      - testelk

networks:
  backend:
    external: true
  testelk:
    external: true